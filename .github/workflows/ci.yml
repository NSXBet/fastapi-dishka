---
name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Tests and Coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create virtual environment
        run: |
          python -m venv .venv
          echo "VIRTUAL_ENV=$PWD/.venv" >> "$GITHUB_ENV"
          echo "$PWD/.venv/bin" >> "$GITHUB_PATH"

      - name: Install dependencies
        run: |
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -e .[dev]

      - name: Run tests with coverage
        run: |
          source .venv/bin/activate
          make test

      - name: Generate coverage reports
        run: |
          source .venv/bin/activate
          pytest --cov=fastapi_dishka \
            --cov-branch \
            --cov-report=xml \
            --cov-report=html \
            --cov-report=term-missing

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/

  lint:
    strategy:
      matrix:
        python-version: ["3.13"]
    permissions:
      contents: read
      packages: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create virtual environment
        run: |
          python -m venv .venv
          echo "VIRTUAL_ENV=$PWD/.venv" >> "$GITHUB_ENV"
          echo "$PWD/.venv/bin" >> "$GITHUB_PATH"

      - name: Install dependencies
        run: |
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -e .[dev]

      - name: Run linters
        run: |
          source .venv/bin/activate
          make lint

  # Job to ensure all checks pass
  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: always()

    steps:
      - name: Check all jobs
        run: |
          if [[ "${{ needs.test.result }}" == "success" && \
                "${{ needs.lint.result }}" == "success" ]]; then
            echo "All CI checks passed!"
            exit 0
          else
            echo "Some CI checks failed:"
            echo "Tests: ${{ needs.test.result }}"
            echo "Linting: ${{ needs.lint.result }}"
            exit 1
          fi
